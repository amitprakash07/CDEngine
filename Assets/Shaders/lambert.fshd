/* #include statement (platform - independent) */
#include "shaders.common"
#include "phongLight.common"

uniform sampler2D g_sampler2D;

/* Input/Output variables (platform-specific) */
#if defined( EAEENGINE_PLATFORM_D3D9 )
	// Entry Point
	//============
	void main(
		// Input
		//======
		in float3 i_normalWorld : NORMAL,
		in float2 i_texcoords : TEXCOORD0,
		in float4 i_color : COLOR0,
		// Output
		//=======
		out float4 o_color : COLOR0
		)
#elif defined( EAEENGINE_PLATFORM_GL )
	// Input
	//======
	layout(location = 0) in vec3 i_normalWorld;
	layout(location = 1) in vec2 i_texcoords;
	layout(location = 2) in vec4 i_color;
	// Output
	//=======
	out vec4 o_color;
	
	// Entry Point
	//============
	void main()
#endif

/* main() function definition (platform-independent) */
	{
		{
			vec4 textureColor = texture2D(g_sampler2D, i_texcoords);
			o_color = i_color * textureColor;
		}
		// Calculate the lighting
		{
			vec3 g_light_direction = vec3(0.0f, -1.0f, 0.0f);
			vec3 g_light_color = vec3(0.8f, 0.8f, 0.8f);
			vec3 normal_world = normalize(i_normalWorld);
			// Normalize the light direction
			float3 light_direction = normalize(g_light_direction);
			vec3 o_lightDiffuse = vec3(0.0f, 0.0f, 0.0f);;
			{
				CalculateDiffuseLighting(normal_world,
					light_direction, g_light_color,
					o_lightDiffuse);
			}
			vec3 vec3 = vec3(0.1f, 0.1f, 0.1f);
			o_color.rgb = o_color.rgb *(o_lightDiffuse + ambient);
		}
	}

