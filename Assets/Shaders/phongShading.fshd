/* #include statement (platform - independent) */
#include "shaders.common"
#include "phongLight.common"


/* Input/Output variables (platform-specific) */
#if defined( EAEENGINE_PLATFORM_D3D9 )
	// Entry Point
	//============
	void main(
		// Input
		//======
		in float3 i_normalWorld : NORMAL,
		in float2 i_texcoords : TEXCOORD0,
		in float4 i_color : COLOR0,
		in float3 i_lightDir : TEXCOORD1, 
		in float3 i_viewDir : TEXCOORD2,
		// Output
		//=======
		out float4 o_color : COLOR0
		)
#elif defined( EAEENGINE_PLATFORM_GL )
	// Input
	//======
	layout(location = 0) in vec3 i_normalWorld;
	layout(location = 1) in vec2 i_texcoords;
	layout(location = 2) in vec4 i_color;
	layout(location = 3) in vec3 i_lightDir;
	layout(location = 4) in vec3 i_viewDir;
	// Output
	//=======
	out vec4 o_color;
	
	// Entry Point
	//============
	void main()
#endif

/* main() function definition (platform-independent) */
	{
		o_color = i_color;
		// Calculate the lighting
		{
			vec3 normal_world = normalize(i_normalWorld);
			// Normalize the light direction
			float3 light_direction = normalize(i_lightDir);
			vec3 o_lightDiffuse = vec3(0.0f, 0.0f, 0.0f);
			CalculateDiffuseLighting(normal_world, light_direction, o_lightDiffuse);
			vec3 o_lightSpecular = vec3(0.0f, 0.0f, 0.0f);
			vec3 view_direction = normalize(i_viewDir);
			CalculateSpecularLighting(normal_world, light_direction, view_direction, o_lightSpecular);
			vec3 ambient = vec3(0.1f, 0.1f, 0.1f);
			o_color.rgb = o_color.rgb *(o_lightDiffuse + o_lightSpecular + ambient);
		}
	}

